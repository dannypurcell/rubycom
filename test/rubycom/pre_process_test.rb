require "#{File.dirname(__FILE__)}/../../lib/rubycom/pre_process.rb"

require "#{File.dirname(__FILE__)}/util_test_module.rb"
require "#{File.dirname(__FILE__)}/util_test_composite.rb"
require "#{File.dirname(__FILE__)}/util_test_no_singleton.rb"

require 'test/unit'

class PreProcessTest < Test::Unit::TestCase

  def test_pre_processing
    test_base = UtilTestComposite
    test_args = {:command_line=>{:args=>["UtilTestModule","test_command"]}}
    test_commands = {:UtilTestComposite=>
                         {:commands=>
                              {:UtilTestModule=>
                                   {:commands=>
                                        {:test_command=>
                                             {:doc=>
                                                  {:full_doc=>"A basic test command",
                                                   :parameters=>[],
                                                   :short_doc=>"A basic test command.",
                                                   :tags=>[]},
                                              :source=>
                                                  "# A basic test command\n  def self.test_command\n    puts 'command test'\n  end\n",
                                              :type=>:command},
                                         :test_command_all_options=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with all optional arguments",
                                                   :parameters=>
                                                       [{:default=>"test_arg_default",
                                                         :doc=>"an optional test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"test_arg",
                                                         :required=>false},
                                                        {:default=>"test_option_default",
                                                         :doc=>"another optional test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"test_option",
                                                         :required=>false}],
                                                   :short_doc=>"A test_command with all optional arguments.",
                                                   :tags=>
                                                       [{:name=>"test_arg",
                                                         :tag_name=>"param",
                                                         :text=>"an optional test argument",
                                                         :types=>["String"]},
                                                        {:name=>"test_option",
                                                         :tag_name=>"param",
                                                         :text=>"another optional test argument",
                                                         :types=>["String"]}]},
                                              :source=>
                                                  "# A test_command with all optional arguments\n# @param [String] test_arg an optional test argument\n# @param [String] test_option another optional test argument\n  def self.test_command_all_options(test_arg='test_arg_default', test_option='test_option_default')\n    puts \"Output is test_arg=\#{test_arg},test_option=\#{test_option}\"\n  end\n",
                                              :type=>:command},
                                         :test_command_arg_arr=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with an array argument",
                                                   :parameters=>
                                                       [{:default=>[],
                                                         :doc=>"an Array test argument",
                                                         :doc_type=>"Array",
                                                         :param_name=>"test_arr",
                                                         :required=>false}],
                                                   :short_doc=>"A test_command with an array argument.",
                                                   :tags=>
                                                       [{:name=>"test_arr",
                                                         :tag_name=>"param",
                                                         :text=>"an Array test argument",
                                                         :types=>["Array"]}]},
                                              :source=>
                                                  "# A test_command with an array argument\n#\n# @param [Array] test_arr an Array test argument\n  def self.test_command_arg_arr(test_arr=[])\n    test_arr\n  end\n",
                                              :type=>:command},
                                         :test_command_arg_false=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with a Boolean argument",
                                                   :parameters=>
                                                       [{:default=>false,
                                                         :doc=>"a test Boolean argument",
                                                         :doc_type=>"Boolean",
                                                         :param_name=>"test_flag",
                                                         :required=>false}],
                                                   :short_doc=>"A test_command with a Boolean argument.",
                                                   :tags=>
                                                       [{:name=>"test_flag",
                                                         :tag_name=>"param",
                                                         :text=>"a test Boolean argument",
                                                         :types=>["Boolean"]},
                                                        {:name=>nil,
                                                         :tag_name=>"return",
                                                         :text=>"the flag passed in",
                                                         :types=>["Boolean"]}]},
                                              :source=>
                                                  "# A test_command with a Boolean argument\n# @param [Boolean] test_flag a test Boolean argument\n# @return [Boolean] the flag passed in\n  def self.test_command_arg_false(test_flag=false)\n    test_flag\n  end\n",
                                              :type=>:command},
                                         :test_command_arg_hash=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with an Hash argument",
                                                   :parameters=>
                                                       [{:default=>{},
                                                         :doc=>"a Hash test argument",
                                                         :doc_type=>"Hash",
                                                         :param_name=>"test_hash",
                                                         :required=>false}],
                                                   :short_doc=>"A test_command with an Hash argument.",
                                                   :tags=>
                                                       [{:name=>"test_hash",
                                                         :tag_name=>"param",
                                                         :text=>"a Hash test argument",
                                                         :types=>["Hash"]}]},
                                              :source=>
                                                  "# A test_command with an Hash argument\n# @param [Hash] test_hash a Hash test argument\n  def self.test_command_arg_hash(test_hash={})\n    test_hash\n  end\n",
                                              :type=>:command},
                                         :test_command_arg_named_arg=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with an arg named arg",
                                                   :parameters=>
                                                       [{:default=>nil,
                                                         :doc=>"a test argument whose parameter name is arg",
                                                         :doc_type=>"String",
                                                         :param_name=>"arg",
                                                         :required=>true}],
                                                   :short_doc=>"A test_command with an arg named arg.",
                                                   :tags=>
                                                       [{:name=>"arg",
                                                         :tag_name=>"param",
                                                         :text=>"a test argument whose parameter name is arg",
                                                         :types=>["String"]}]},
                                              :source=>
                                                  "# A test_command with an arg named arg\n#\n# @param [String] arg a test argument whose parameter name is arg\n  def self.test_command_arg_named_arg(arg)\n    \"arg=\#{arg}\"\n  end\n",
                                              :type=>:command},
                                         :test_command_arg_timestamp=>
                                             {:doc=>
                                                  {:full_doc=>
                                                       "A test_command with a Timestamp argument and an unnecessarily long description which should overflow when\nit tries to line up with other descriptions.\n\nsome more stuff",
                                                   :parameters=>
                                                       [{:default=>nil,
                                                         :doc=>"a test Timestamp argument",
                                                         :doc_type=>"Timestamp",
                                                         :param_name=>"test_time",
                                                         :required=>true}],
                                                   :short_doc=>
                                                       "A test_command with a Timestamp argument and an unnecessarily long description which should overflow when\nit tries to line up with other descriptions.",
                                                   :tags=>
                                                       [{:name=>"test_time",
                                                         :tag_name=>"param",
                                                         :text=>"a test Timestamp argument",
                                                         :types=>["Timestamp"]},
                                                        {:name=>nil,
                                                         :tag_name=>"return",
                                                         :text=>"a hash including the given argument",
                                                         :types=>["Hash"]}]},
                                              :source=>
                                                  "# A test_command with a Timestamp argument and an unnecessarily long description which should overflow when\n# it tries to line up with other descriptions.\n#\n# some more stuff\n#\n# @param [Timestamp] test_time a test Timestamp argument\n# @return [Hash] a hash including the given argument\n  def self.test_command_arg_timestamp(test_time)\n    {test_time: test_time}\n  end\n",
                                              :type=>:command},
                                         :test_command_mixed_options=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with several mixed options",
                                                   :parameters=>
                                                       [{:default=>nil,
                                                         :doc=>"",
                                                         :doc_type=>"",
                                                         :param_name=>"test_arg",
                                                         :required=>true},
                                                        {:default=>[],
                                                         :doc=>"",
                                                         :doc_type=>"",
                                                         :param_name=>"test_arr",
                                                         :required=>false},
                                                        {:default=>"test_opt_arg",
                                                         :doc=>"",
                                                         :doc_type=>"",
                                                         :param_name=>"test_opt",
                                                         :required=>false},
                                                        {:default=>{},
                                                         :doc=>"",
                                                         :doc_type=>"",
                                                         :param_name=>"test_hsh",
                                                         :required=>false},
                                                        {:default=>true,
                                                         :doc=>"",
                                                         :doc_type=>"",
                                                         :param_name=>"test_bool",
                                                         :required=>false},
                                                        {:default=>nil,
                                                         :doc=>"",
                                                         :doc_type=>"",
                                                         :param_name=>"*test_rest",
                                                         :required=>true}],
                                                   :short_doc=>"A test_command with several mixed options.",
                                                   :tags=>[]},
                                              :source=>
                                                  "# A test_command with several mixed options\n  def self.test_command_mixed_options(test_arg, test_arr=[], test_opt='test_opt_arg', test_hsh={}, test_bool=true, *test_rest)\n    \"test_arg=\#{test_arg} test_arr=\#{test_arr} test_opt=\#{test_opt} test_hsh=\#{test_hsh} test_bool=\#{test_bool} test_rest=\#{test_rest}\"\n  end\n",
                                              :type=>:command},
                                         :test_command_no_docs=>
                                             {:doc=>{:full_doc=>"", :parameters=>[], :short_doc=>"", :tags=>[]},
                                              :source=>
                                                  "  def self.test_command_no_docs\n    puts 'command test'\n  end\n",
                                              :type=>:command},
                                         :test_command_options_arr=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with an options array",
                                                   :parameters=>
                                                       [{:default=>"test_option_default",
                                                         :doc=>"an optional test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"test_option",
                                                         :required=>false},
                                                        {:default=>nil,
                                                         :doc=>"",
                                                         :doc_type=>"",
                                                         :param_name=>"*test_options",
                                                         :required=>true}],
                                                   :short_doc=>"A test_command with an options array.",
                                                   :tags=>
                                                       [{:name=>"test_option",
                                                         :tag_name=>"param",
                                                         :text=>"an optional test argument",
                                                         :types=>["String"]},
                                                        {:name=>"test_options",
                                                         :tag_name=>"param",
                                                         :text=>"an optional array of arguments",
                                                         :types=>["Array"]}]},
                                              :source=>
                                                  "# A test_command with an options array\n# @param [String] test_option an optional test argument\n# @param [Array] test_options an optional array of arguments\n  def self.test_command_options_arr (\n      test_option='test_option_default',\n          *test_options\n  )\n    puts \"Output is test_option=\#{test_option},test_option_arr=\#{test_options}\"\n  end\n",
                                              :type=>:command},
                                         :test_command_with_arg=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with one arg",
                                                   :parameters=>
                                                       [{:default=>nil,
                                                         :doc=>"a test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"test_arg",
                                                         :required=>true}],
                                                   :short_doc=>"A test_command with one arg.",
                                                   :tags=>
                                                       [{:name=>"test_arg",
                                                         :tag_name=>"param",
                                                         :text=>"a test argument",
                                                         :types=>["String"]}]},
                                              :source=>
                                                  "# A test_command with one arg\n#\n# @param [String] test_arg a test argument\n  def self.test_command_with_arg(test_arg)\n    \"test_arg=\#{test_arg}\"\n  end\n",
                                              :type=>:command},
                                         :test_command_with_args=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with two args",
                                                   :parameters=>
                                                       [{:default=>nil,
                                                         :doc=>"a test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"test_arg",
                                                         :required=>true},
                                                        {:default=>nil,
                                                         :doc=>"another test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"another_test_arg",
                                                         :required=>true}],
                                                   :short_doc=>"A test_command with two args.",
                                                   :tags=>
                                                       [{:name=>"test_arg",
                                                         :tag_name=>"param",
                                                         :text=>"a test argument",
                                                         :types=>["String"]},
                                                        {:name=>"another_test_arg",
                                                         :tag_name=>"param",
                                                         :text=>"another test argument",
                                                         :types=>["String"]}]},
                                              :source=>
                                                  "# A test_command with two args\n# @param [String] test_arg a test argument\n# @param [String] another_test_arg another test argument\n  def self.test_command_with_args(test_arg, another_test_arg)\n    puts \"test_arg=\#{test_arg},another_test_arg=\#{another_test_arg}\"\n  end\n",
                                              :type=>:command},
                                         :test_command_with_options=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with an optional argument",
                                                   :parameters=>
                                                       [{:default=>nil,
                                                         :doc=>"a test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"test_arg",
                                                         :required=>true},
                                                        {:default=>"option_default",
                                                         :doc=>"an optional test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"test_option",
                                                         :required=>false}],
                                                   :short_doc=>"A test_command with an optional argument.",
                                                   :tags=>
                                                       [{:name=>"test_arg",
                                                         :tag_name=>"param",
                                                         :text=>"a test argument",
                                                         :types=>["String"]},
                                                        {:name=>"test_option",
                                                         :tag_name=>"param",
                                                         :text=>"an optional test argument",
                                                         :types=>["String"]}]},
                                              :source=>
                                                  "# A test_command with an optional argument\n# @param [String] test_arg a test argument\n# @param [String] test_option an optional test argument\n  def self.test_command_with_options(test_arg, test_option='option_default')\n    puts \"test_arg=\#{test_arg},test_option=\#{test_option}\"\n  end\n",
                                              :type=>:command},
                                         :test_command_with_return=>
                                             {:doc=>
                                                  {:full_doc=>"A test_command with a return argument",
                                                   :parameters=>
                                                       [{:default=>nil,
                                                         :doc=>"a test argument",
                                                         :doc_type=>"String",
                                                         :param_name=>"test_arg",
                                                         :required=>true},
                                                        {:default=>1,
                                                         :doc=>
                                                             "an optional test argument which happens to be an Integer",
                                                         :doc_type=>"Integer",
                                                         :param_name=>"test_option_int",
                                                         :required=>false}],
                                                   :short_doc=>"A test_command with a return argument.",
                                                   :tags=>
                                                       [{:name=>"test_arg",
                                                         :tag_name=>"param",
                                                         :text=>"a test argument",
                                                         :types=>["String"]},
                                                        {:name=>"test_option_int",
                                                         :tag_name=>"param",
                                                         :text=>
                                                             "an optional test argument which happens to be an Integer",
                                                         :types=>["Integer"]},
                                                        {:name=>nil,
                                                         :tag_name=>"return",
                                                         :text=>
                                                             "an array including both params if test_option_int != 1",
                                                         :types=>["Array"]},
                                                        {:name=>nil,
                                                         :tag_name=>"return",
                                                         :text=>"a the first param if test_option_int == 1",
                                                         :types=>["String"]}]},
                                              :source=>
                                                  "# A test_command with a return argument\n#\n# @param [String] test_arg a test argument\n# @param [Integer] test_option_int an optional test argument which happens to be an Integer\n# @return [Array] an array including both params if test_option_int != 1\n# @return [String] a the first param if test_option_int == 1\n  def self.test_command_with_return(test_arg, test_option_int=1)\n    ret = [test_arg, test_option_int]\n    if test_option_int == 1\n      ret = test_arg\n    end\n    ret\n  end\n",
                                              :type=>:command}},
                                    :doc=>
                                        {:commands=>
                                             [{:full_doc=>"A test non-command method",
                                               :parameters=>[],
                                               :short_doc=>"A test non-command method.",
                                               :tags=>[]},
                                              {:full_doc=>"A basic test command",
                                               :parameters=>[],
                                               :short_doc=>"A basic test command.",
                                               :tags=>[]},
                                              {:full_doc=>"", :parameters=>[], :short_doc=>"", :tags=>[]},
                                              {:full_doc=>"A test_command with one arg",
                                               :parameters=>
                                                   [{:default=>nil,
                                                     :doc=>"a test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"test_arg",
                                                     :required=>true}],
                                               :short_doc=>"A test_command with one arg.",
                                               :tags=>
                                                   [{:name=>"test_arg",
                                                     :tag_name=>"param",
                                                     :text=>"a test argument",
                                                     :types=>["String"]}]},
                                              {:full_doc=>"A test_command with an arg named arg",
                                               :parameters=>
                                                   [{:default=>nil,
                                                     :doc=>"a test argument whose parameter name is arg",
                                                     :doc_type=>"String",
                                                     :param_name=>"arg",
                                                     :required=>true}],
                                               :short_doc=>"A test_command with an arg named arg.",
                                               :tags=>
                                                   [{:name=>"arg",
                                                     :tag_name=>"param",
                                                     :text=>"a test argument whose parameter name is arg",
                                                     :types=>["String"]}]},
                                              {:full_doc=>"A test_command with two args",
                                               :parameters=>
                                                   [{:default=>nil,
                                                     :doc=>"a test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"test_arg",
                                                     :required=>true},
                                                    {:default=>nil,
                                                     :doc=>"another test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"another_test_arg",
                                                     :required=>true}],
                                               :short_doc=>"A test_command with two args.",
                                               :tags=>
                                                   [{:name=>"test_arg",
                                                     :tag_name=>"param",
                                                     :text=>"a test argument",
                                                     :types=>["String"]},
                                                    {:name=>"another_test_arg",
                                                     :tag_name=>"param",
                                                     :text=>"another test argument",
                                                     :types=>["String"]}]},
                                              {:full_doc=>"A test_command with an optional argument",
                                               :parameters=>
                                                   [{:default=>nil,
                                                     :doc=>"a test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"test_arg",
                                                     :required=>true},
                                                    {:default=>"option_default",
                                                     :doc=>"an optional test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"test_option",
                                                     :required=>false}],
                                               :short_doc=>"A test_command with an optional argument.",
                                               :tags=>
                                                   [{:name=>"test_arg",
                                                     :tag_name=>"param",
                                                     :text=>"a test argument",
                                                     :types=>["String"]},
                                                    {:name=>"test_option",
                                                     :tag_name=>"param",
                                                     :text=>"an optional test argument",
                                                     :types=>["String"]}]},
                                              {:full_doc=>"A test_command with all optional arguments",
                                               :parameters=>
                                                   [{:default=>"test_arg_default",
                                                     :doc=>"an optional test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"test_arg",
                                                     :required=>false},
                                                    {:default=>"test_option_default",
                                                     :doc=>"another optional test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"test_option",
                                                     :required=>false}],
                                               :short_doc=>"A test_command with all optional arguments.",
                                               :tags=>
                                                   [{:name=>"test_arg",
                                                     :tag_name=>"param",
                                                     :text=>"an optional test argument",
                                                     :types=>["String"]},
                                                    {:name=>"test_option",
                                                     :tag_name=>"param",
                                                     :text=>"another optional test argument",
                                                     :types=>["String"]}]},
                                              {:full_doc=>"A test_command with an options array",
                                               :parameters=>
                                                   [{:default=>"test_option_default",
                                                     :doc=>"an optional test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"test_option",
                                                     :required=>false},
                                                    {:default=>nil,
                                                     :doc=>"",
                                                     :doc_type=>"",
                                                     :param_name=>"*test_options",
                                                     :required=>true}],
                                               :short_doc=>"A test_command with an options array.",
                                               :tags=>
                                                   [{:name=>"test_option",
                                                     :tag_name=>"param",
                                                     :text=>"an optional test argument",
                                                     :types=>["String"]},
                                                    {:name=>"test_options",
                                                     :tag_name=>"param",
                                                     :text=>"an optional array of arguments",
                                                     :types=>["Array"]}]},
                                              {:full_doc=>"A test_command with a return argument",
                                               :parameters=>
                                                   [{:default=>nil,
                                                     :doc=>"a test argument",
                                                     :doc_type=>"String",
                                                     :param_name=>"test_arg",
                                                     :required=>true},
                                                    {:default=>1,
                                                     :doc=>
                                                         "an optional test argument which happens to be an Integer",
                                                     :doc_type=>"Integer",
                                                     :param_name=>"test_option_int",
                                                     :required=>false}],
                                               :short_doc=>"A test_command with a return argument.",
                                               :tags=>
                                                   [{:name=>"test_arg",
                                                     :tag_name=>"param",
                                                     :text=>"a test argument",
                                                     :types=>["String"]},
                                                    {:name=>"test_option_int",
                                                     :tag_name=>"param",
                                                     :text=>
                                                         "an optional test argument which happens to be an Integer",
                                                     :types=>["Integer"]},
                                                    {:name=>nil,
                                                     :tag_name=>"return",
                                                     :text=>"an array including both params if test_option_int != 1",
                                                     :types=>["Array"]},
                                                    {:name=>nil,
                                                     :tag_name=>"return",
                                                     :text=>"a the first param if test_option_int == 1",
                                                     :types=>["String"]}]},
                                              {:full_doc=>
                                                   "A test_command with a Timestamp argument and an unnecessarily long description which should overflow when\nit tries to line up with other descriptions.\n\nsome more stuff",
                                               :parameters=>
                                                   [{:default=>nil,
                                                     :doc=>"a test Timestamp argument",
                                                     :doc_type=>"Timestamp",
                                                     :param_name=>"test_time",
                                                     :required=>true}],
                                               :short_doc=>
                                                   "A test_command with a Timestamp argument and an unnecessarily long description which should overflow when\nit tries to line up with other descriptions.",
                                               :tags=>
                                                   [{:name=>"test_time",
                                                     :tag_name=>"param",
                                                     :text=>"a test Timestamp argument",
                                                     :types=>["Timestamp"]},
                                                    {:name=>nil,
                                                     :tag_name=>"return",
                                                     :text=>"a hash including the given argument",
                                                     :types=>["Hash"]}]},
                                              {:full_doc=>"A test_command with a Boolean argument",
                                               :parameters=>
                                                   [{:default=>false,
                                                     :doc=>"a test Boolean argument",
                                                     :doc_type=>"Boolean",
                                                     :param_name=>"test_flag",
                                                     :required=>false}],
                                               :short_doc=>"A test_command with a Boolean argument.",
                                               :tags=>
                                                   [{:name=>"test_flag",
                                                     :tag_name=>"param",
                                                     :text=>"a test Boolean argument",
                                                     :types=>["Boolean"]},
                                                    {:name=>nil,
                                                     :tag_name=>"return",
                                                     :text=>"the flag passed in",
                                                     :types=>["Boolean"]}]},
                                              {:full_doc=>"A test_command with an array argument",
                                               :parameters=>
                                                   [{:default=>[],
                                                     :doc=>"an Array test argument",
                                                     :doc_type=>"Array",
                                                     :param_name=>"test_arr",
                                                     :required=>false}],
                                               :short_doc=>"A test_command with an array argument.",
                                               :tags=>
                                                   [{:name=>"test_arr",
                                                     :tag_name=>"param",
                                                     :text=>"an Array test argument",
                                                     :types=>["Array"]}]},
                                              {:full_doc=>"A test_command with an Hash argument",
                                               :parameters=>
                                                   [{:default=>{},
                                                     :doc=>"a Hash test argument",
                                                     :doc_type=>"Hash",
                                                     :param_name=>"test_hash",
                                                     :required=>false}],
                                               :short_doc=>"A test_command with an Hash argument.",
                                               :tags=>
                                                   [{:name=>"test_hash",
                                                     :tag_name=>"param",
                                                     :text=>"a Hash test argument",
                                                     :types=>["Hash"]}]},
                                              {:full_doc=>"A test_command with several mixed options",
                                               :parameters=>
                                                   [{:default=>nil,
                                                     :doc=>"",
                                                     :doc_type=>"",
                                                     :param_name=>"test_arg",
                                                     :required=>true},
                                                    {:default=>[],
                                                     :doc=>"",
                                                     :doc_type=>"",
                                                     :param_name=>"test_arr",
                                                     :required=>false},
                                                    {:default=>"test_opt_arg",
                                                     :doc=>"",
                                                     :doc_type=>"",
                                                     :param_name=>"test_opt",
                                                     :required=>false},
                                                    {:default=>{},
                                                     :doc=>"",
                                                     :doc_type=>"",
                                                     :param_name=>"test_hsh",
                                                     :required=>false},
                                                    {:default=>true,
                                                     :doc=>"",
                                                     :doc_type=>"",
                                                     :param_name=>"test_bool",
                                                     :required=>false},
                                                    {:default=>nil,
                                                     :doc=>"",
                                                     :doc_type=>"",
                                                     :param_name=>"*test_rest",
                                                     :required=>true}],
                                               :short_doc=>"A test_command with several mixed options.",
                                               :tags=>[]}],
                                         :full_doc=>
                                             "A command module used for testing\n\nThis module contains most of the test case input methods.",
                                         :short_doc=>"A command module used for testing."},
                                    :source=>
                                        "require \"\#{File.expand_path(File.dirname(__FILE__))}/../../lib/rubycom.rb\"\n# A command module used for testing\n#\n#This module contains most of the test case input methods.\nmodule UtilTestModule\n\n  # A test non-command method\n  def non_command\n    puts 'fail'\n  end\n\n  # A basic test command\n  def self.test_command\n    puts 'command test'\n  end\n\n  def self.test_command_no_docs\n    puts 'command test'\n  end\n\n  # A test_command with one arg\n  #\n  # @param [String] test_arg a test argument\n  def self.test_command_with_arg(test_arg)\n    \"test_arg=\#{test_arg}\"\n  end\n\n  # A test_command with an arg named arg\n  #\n  # @param [String] arg a test argument whose parameter name is arg\n  def self.test_command_arg_named_arg(arg)\n    \"arg=\#{arg}\"\n  end\n\n  # A test_command with two args\n  # @param [String] test_arg a test argument\n  # @param [String] another_test_arg another test argument\n  def self.test_command_with_args(test_arg, another_test_arg)\n    puts \"test_arg=\#{test_arg},another_test_arg=\#{another_test_arg}\"\n  end\n\n  # A test_command with an optional argument\n  # @param [String] test_arg a test argument\n  # @param [String] test_option an optional test argument\n  def self.test_command_with_options(test_arg, test_option='option_default')\n    puts \"test_arg=\#{test_arg},test_option=\#{test_option}\"\n  end\n\n  # A test_command with all optional arguments\n  # @param [String] test_arg an optional test argument\n  # @param [String] test_option another optional test argument\n  def self.test_command_all_options(test_arg='test_arg_default', test_option='test_option_default')\n    puts \"Output is test_arg=\#{test_arg},test_option=\#{test_option}\"\n  end\n\n  # A test_command with an options array\n  # @param [String] test_option an optional test argument\n  # @param [Array] test_options an optional array of arguments\n  def self.test_command_options_arr (\n      test_option='test_option_default',\n          *test_options\n  )\n    puts \"Output is test_option=\#{test_option},test_option_arr=\#{test_options}\"\n  end\n\n  # A test_command with a return argument\n  #\n  # @param [String] test_arg a test argument\n  # @param [Integer] test_option_int an optional test argument which happens to be an Integer\n  # @return [Array] an array including both params if test_option_int != 1\n  # @return [String] a the first param if test_option_int == 1\n  def self.test_command_with_return(test_arg, test_option_int=1)\n    ret = [test_arg, test_option_int]\n    if test_option_int == 1\n      ret = test_arg\n    end\n    ret\n  end\n\n  # A test_command with a Timestamp argument and an unnecessarily long description which should overflow when\n  # it tries to line up with other descriptions.\n  #\n  # some more stuff\n  #\n  # @param [Timestamp] test_time a test Timestamp argument\n  # @return [Hash] a hash including the given argument\n  def self.test_command_arg_timestamp(test_time)\n    {test_time: test_time}\n  end\n\n  # A test_command with a Boolean argument\n  # @param [Boolean] test_flag a test Boolean argument\n  # @return [Boolean] the flag passed in\n  def self.test_command_arg_false(test_flag=false)\n    test_flag\n  end\n\n  # A test_command with an array argument\n  #\n  # @param [Array] test_arr an Array test argument\n  def self.test_command_arg_arr(test_arr=[])\n    test_arr\n  end\n\n  # A test_command with an Hash argument\n  # @param [Hash] test_hash a Hash test argument\n  def self.test_command_arg_hash(test_hash={})\n    test_hash\n  end\n\n  # A test_command with several mixed options\n  def self.test_command_mixed_options(test_arg, test_arr=[], test_opt='test_opt_arg', test_hsh={}, test_bool=true, *test_rest)\n    \"test_arg=\#{test_arg} test_arr=\#{test_arr} test_opt=\#{test_opt} test_hsh=\#{test_hsh} test_bool=\#{test_bool} test_rest=\#{test_rest}\"\n  end\n\n  include Rubycom\nend\n",
                                    :type=>:module},
                               :UtilTestNoSingleton=>
                                   {:commands=>{},
                                    :doc=>{:full_doc=>"", :short_doc=>""},
                                    :source=>"",
                                    :type=>:module},
                               :test_composite_command=>
                                   {:doc=>
                                        {:full_doc=>"A test_command in a composite console",
                                         :parameters=>
                                             [{:default=>nil,
                                               :doc=>"a test argument",
                                               :doc_type=>"String",
                                               :param_name=>"test_arg",
                                               :required=>true}],
                                         :short_doc=>"A test_command in a composite console.",
                                         :tags=>
                                             [{:name=>"test_arg",
                                               :tag_name=>"param",
                                               :text=>"a test argument",
                                               :types=>["String"]},
                                              {:name=>nil,
                                               :tag_name=>"return",
                                               :text=>"the test arg",
                                               :types=>["String"]}]},
                                    :source=>
                                        "# A test_command in a composite console\n#\n# @param [String] test_arg a test argument\n# @return [String] the test arg\n  def self.test_composite_command(test_arg)\n    test_arg\n  end\n",
                                    :type=>:command}},
                          :doc=>
                              {:commands=>
                                   [{:full_doc=>"A test_command in a composite console",
                                     :parameters=>
                                         [{:default=>nil,
                                           :doc=>"a test argument",
                                           :doc_type=>"String",
                                           :param_name=>"test_arg",
                                           :required=>true}],
                                     :short_doc=>"A test_command in a composite console.",
                                     :tags=>
                                         [{:name=>"test_arg",
                                           :tag_name=>"param",
                                           :text=>"a test argument",
                                           :types=>["String"]},
                                          {:name=>nil,
                                           :tag_name=>"return",
                                           :text=>"the test arg",
                                           :types=>["String"]}]}],
                               :full_doc=>"",
                               :short_doc=>""},
                          :source=>
                              "#!/usr/bin/env ruby\nrequire \"\#{File.expand_path(File.dirname(__FILE__))}/../../lib/rubycom.rb\"\nrequire \"\#{File.expand_path(File.dirname(__FILE__))}/util_test_module.rb\"\nrequire \"\#{File.expand_path(File.dirname(__FILE__))}/util_test_no_singleton.rb\"\n\nmodule UtilTestComposite\n  include UtilTestModule\n\n  include UtilTestNoSingleton\n\n  # A test_command in a composite console\n  #\n  # @param [String] test_arg a test argument\n  # @return [String] the test arg\n  def self.test_composite_command(test_arg)\n    test_arg\n  end\n\n  include Rubycom\nend\n",
                          :type=>:module}}
    result = Rubycom::PreProcess.pre_process(test_base, test_args, test_commands)
    expected = {}
    assert_equal(expected, result)
  end

end
